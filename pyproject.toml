[tool.poetry]
name = "nhp_brainextraction"
version = "0.1.0"
description = "U-Net brain extraction tool for nonhuman primates"
authors = ["Xindi Wang", "Xinhui Li", "Ting Xu"]
maintainers = ["Jason Kai"]
license = "GPLv3"
readme = "README.md"
packages = [{ include = "UNet_Model", from = ".", to = "nhp_brainextraction" }]

[tool.poetry.dependencies]
python = ">=3.7, <3.8"
nibabel = "^3.2.1"
scipy = "^1.6.2"
torch = "1.6.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.6"

[tool.poetry.group.docs.dependencies]
pdoc = "^13.1.1"

[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = []

[tool.mypy]
ignore_missing_imports = true

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
line-length = 88
indent-width = 4
src = ["."]
target-version = "py37"

[tool.ruff.lint]
select = ["ANN", "D", "E", "F", "I"]
ignore = [
    "ANN101", # self should not be annotated.
    "ANN102", # cls should not be annotated.
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"
